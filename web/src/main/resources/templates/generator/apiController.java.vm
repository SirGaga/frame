package ${package.Controller};

import org.springframework.stereotype.Controller;
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import com.feityz.${table.serviceName};
import com.feityz.po.${entity};
import com.feityz.common.BaseController;
import com.feityz.common.Rest;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api(tags = "请写全接口用途注释")
@RestController
@RequestMapping("/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} extends BaseController{
#end

@Autowired
public ${table.serviceName} ${table.entityPath}Service;

@PostMapping
@ApiOperation(value = "新增数据", notes = "新增数据")
public Rest add(${entity} entity){
        return Rest.success().setData(${table.entityPath}Service.saveOrUpdate(entity));
        }

@DeleteMapping("/{id}")
@ApiOperation(value = "根据主键删除", notes = "根据主键删除")
public Rest delete(@PathVariable Long id){
        return Rest.success().setData(${table.entityPath}Service.removeById(id));
        }

@PutMapping("/{id}")
@ApiOperation(value = "根据主键修改", notes = "根据主键修改")
public Rest update(@PathVariable Long id,@RequestBody ${entity} entity){
        entity.setId(id);
        return Rest.success().setData(${table.entityPath}Service.saveOrUpdate(entity));
        }

@GetMapping("/{id}")
@ApiOperation(value = "根据主键获取", notes = "根据主键获取")
public Rest get(@PathVariable Long id){
        return Rest.success().setData(${table.entityPath}Service.getById(id));
        }

@GetMapping
@ApiOperation(value = "分页查询数据", notes = "分页查询数据")
public Rest listPage(${entity} condition,
@RequestParam(name = "limit", required = false, defaultValue = "10") int limit,
@RequestParam(name = "page", required = false, defaultValue = "-1")int page){
        IPage<${entity}> pageInfo= ${table.entityPath}Service.getPage(condition,new Page<${entity}>(page,limit));
        return Rest.success().setData(pageInfo.getRecords()).setTotal(pageInfo.getTotal());
        }
        }
