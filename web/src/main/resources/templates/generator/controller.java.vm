package ${package.Controller};

import org.springframework.stereotype.Controller;
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import com.feityz.system.service.${table.serviceName};
import com.feityz.system.entity.${entity};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.feityz.common.BaseController;
import com.feityz.common.Rest;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import springfox.documentation.annotations.ApiIgnore;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api(tags = "请写全接口用途注释")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} extends BaseController{
#end

@Autowired
public ${table.serviceName} ${table.entityPath}Service;


@GetMapping("/index")
@RequiresPermissions("${table.entityPath}:index")
@ApiOperation(value = "跳转页面", notes = "跳转到列表页面")
@ApiIgnore
public String index(Model model){
        return"${table.entityPath}/index";
        }

@ResponseBody
@GetMapping("/list")
@RequiresPermissions("${table.entityPath}:list")
@ApiOperation(value = "分页查询数据", notes = "分页查询数据")
public Rest list(${entity} condition,int page,int limit){
        IPage<${entity}> pageInfo= ${table.entityPath}Service.getPage(condition,new Page<${entity}>(page,limit));
        return Rest.success().setData(pageInfo.getRecords()).setTotal(pageInfo.getTotal());
        }

@PostMapping("/save")
@ResponseBody
@RequiresPermissions("${table.entityPath}:save")
@ApiOperation(value = "保存数据", notes = "保存数据")
public Rest save(${entity} entity){
        return Rest.success().setData(${table.entityPath}Service.saveOrUpdate(entity));
        }

@GetMapping("/get")
@ResponseBody
@RequiresPermissions("${table.entityPath}:get")
@ApiOperation(value = "根据主键获取", notes = "根据主键获取")
public Rest get(Long id){
        return Rest.success().setData(${table.entityPath}Service.getById(id));
        }

@DeleteMapping("/delete")
@RequiresPermissions("${table.entityPath}:delete")
@ResponseBody
@ApiOperation(value = "根据主键删除", notes = "根据主键删除")
public Rest delete(Long id){
        return Rest.success().setData(${table.entityPath}Service.removeById(id));
        }
        }
